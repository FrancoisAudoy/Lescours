package set;


public abstract class BinaryTree implements IBinaryTree {

	private Object data;
	private IBinaryTree leftChild, rightChild;

	public BinaryTree(Object data, BinaryTree leftChild,
			BinaryTree rightChild) {
		this.data = data;
		this.leftChild = leftChild;
		this.rightChild = rightChild;
	}

	@Override
	public Object getData() {

		return data;
	}

	@Override
	public void putData(Object data) {
		this.data = data;

	}

	@Override
	public IBinaryTree getLeftChild() {

		return leftChild;
	}

	@Override
	public IBinaryTree getRightChild() {

		return rightChild;
	}

	public String toString(){

		StringBuffer s = new StringBuffer();
		s.append("pere : ").append(data.toString()).append(',');
		if(leftChild != null)
			s.append("fils gauche :").append(leftChild.getData().toString()).append(',');
		if(rightChild != null)
			s.append("fils droit :").append(rightChild.getData().toString());
		s.append('\n');

		if(leftChild != null)
			s.append(leftChild.toString());
		if(rightChild != null)
			s.append(rightChild.toString());

		return s.toString();

	}

}
